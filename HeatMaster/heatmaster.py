from ConfigurationLoader.Parser import Parser
from ConfigurationLoader.AutoGenerated import AutoGenerated

from thermostate.thermostate import Thermostate
from temperature.mqttproxy import MqttProxy

class HeatMaster(AutoGenerated):

    def __init__(self, config = None):
        super().__init__()

        print (self.classFinder)

        self.classFinder = {"mqtt": MqttProxy, "thermostates" : Thermostate}

        if(config):
            self.children = self.loadConfig(config)

        print ("------------------------------------------- INSPECT TIME ----------------------------------------------")

        for c in self.children:
            print(c)
            try:
                c.inspect()
            except AttributeError as e:
                print ("Object ", c, " has no inspection path")

if __name__ == "__main__":
    import sys
    confFile = sys.argv[1]
    ps = Parser(confFile)

    hm = HeatMaster(config = ps.getConfiguration())
